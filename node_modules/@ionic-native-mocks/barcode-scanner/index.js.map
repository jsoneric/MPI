{"version":3,"sources":["../../../src/@ionic-native-mocks/plugins/barcode-scanner/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,+BAA+B,CAAC;AAmD/D;IAAwC,sCAAc;IAAtD;QAAA,qEA0BC;QAzBC,WAAK,GAAW,CAAC,CAAC;;IAyBpB,CAAC;IAxBC;;;;SAIK;IACL,iCAAI,GAAJ,UAAK,OAA+B;QAClC,IAAI,SAAS,GAAsB,EAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;QAE5F,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,OAAO,CAAC,SAAS,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACD;;;;;;SAMK;IACL,mCAAM,GAAN,UAAO,IAAY,EAAE,IAAS;QAC5B,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;IACL,CAAC;IACH,yBAAC;AAAD,CA1BA,AA0BC,CA1BuC,cAAc,GA0BrD","file":"index.js","sourceRoot":"","sourcesContent":["import { BarcodeScanner } from '@ionic-native/barcode-scanner';\n\nexport interface BarcodeScannerOptions {\n    /**\n     * Prefer front camera. Supported on iOS and Android.\n     */\n    preferFrontCamera?: boolean;\n    /**\n     * Show flip camera button. Supported on iOS and Android.\n     */\n    showFlipCameraButton?: boolean;\n    /**\n     * Show torch button. Supported on iOS and Android.\n     */\n    showTorchButton?: boolean;\n    /**\n     * Disable animations. Supported on iOS only.\n     */\n    disableAnimations?: boolean;\n    /**\n     * Disable success beep. Supported on iOS only.\n     */\n    disableSuccessBeep?: boolean;\n    /**\n     * Prompt text. Supported on Android only.\n     */\n    prompt?: string;\n    /**\n     * Formats separated by commas. Defaults to all formats except `PDF_417` and `RSS_EXPANDED`.\n     */\n    formats?: string;\n    /**\n     * Orientation. Supported on Android only. Can be set to `portrait` or `landscape`. Defaults to none so the user can rotate the phone and pick an orientation.\n     */\n    orientation?: string;\n    /**\n     * Launch with the torch switched on (if available). Supported on Android only.\n     */\n    torchOn?: boolean;\n    /**\n     * Display scanned text for X ms. 0 suppresses it entirely, default 1500. Supported on Android only.\n     */\n    resultDisplayDuration?: number;\n}\n\nexport interface BarcodeScanResult {\n    format: 'QR_CODE' | 'DATA_MATRIX' | 'UPC_E' | 'UPC_A' | 'EAN_8' | 'EAN_13' | 'CODE_128' | 'CODE_39' | 'CODE_93' | 'CODABAR' | 'ITF' | 'RSS14' | 'RSS_EXPANDED' | 'PDF417' | 'AZTEC' | 'MSI';\n    cancelled: boolean;\n    text: string;\n}\n\nexport class BarcodeScannerMock extends BarcodeScanner {\n  index: number = 0;\n  /**\n     * Open the barcode scanner.\n     * @param options {BarcodeScannerOptions} Optional options to pass to the scanner\n     * @returns {Promise<any>} Returns a Promise that resolves with scanner data, or rejects with an error.\n     */\n  scan(options?: BarcodeScannerOptions): Promise<BarcodeScanResult> {\n    let theResult: BarcodeScanResult = {format: 'QR_CODE', cancelled: false, text: 'RESPONSE' };\n\n    return new Promise((resolve, reject) => {\n      resolve(theResult);\n    });\n  }\n  /**\n     * Encodes data into a barcode.\n     * NOTE: not well supported on Android\n     * @param type {string} Type of encoding\n     * @param data {any} Data to encode\n     * @returns {Promise<any>}\n     */\n  encode(type: string, data: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      resolve();\n    });\n  }\n}\n\n\n"]}