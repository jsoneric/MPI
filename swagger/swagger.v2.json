{
  "swagger": "2.0",
  "info": {
    "description": "A delightful application to help you pay for your parking when you want instead of waiting in a line.",
    "version": "2.0.0",
    "title": "Mobile Pay",
    "termsOfService": "http://paylock.com/terms",
    "contact": {
      "name": "PayLock Engineering",
      "email": "engineers@paylock.com"
    },
    "license": {
      "name": "PayLock IPT, LLC",
      "url": "http://www.paylock.com/license"
    }
  },
  "host": "demo.citewriteit.com",
  "basePath": "/cws/parkbynexus",
  "tags": [
    {
      "name": "cards",
      "description": "A credit card belonging to the Owner"
    },
    {
      "name": "invoices",
      "description": "The Invoice for a Permit or Meter"
    },
    {
      "name": "lots",
      "description": "A Lot where a Permit may be applied"
    },
    {
      "name": "meters",
      "description": "Everything pertaining to parking meters"
    },
    {
      "name": "owners",
      "description": "Operations about the Owner"
    },
    {
      "name": "owner_attributes",
      "description": "The attributes of a specific Owner"
    },
    {
      "name": "permits",
      "description": "Everything pertaining to your Permits"
    },
    {
      "name": "permit_attributes",
      "description": "The attributes of a specific Permit"
    },
    {
      "name": "permit_types",
      "description": "The Type of Permit"
    },
    {
      "name": "permit_type_attributes",
      "description": "The attributes of a specific PermitType"
    },
    {
      "name": "privileges",
      "description": "The Privileges for a Permit"
    },
    {
      "name": "purchases",
      "description": "The Permits purchased from a Lot or Meter"
    },
    {
      "name": "states",
      "description": "The State where your Vehicle is registered"
    },
    {
      "name": "times",
      "description": "The Times available to a Meter"
    },
    {
      "name": "vehicles",
      "description": "Everything pertaining to your Vehicles"
    },
    {
      "name": "vehicle_attributes",
      "description": "The attributes for a specific Vehicle"
    },
    {
      "name": "vehicle_types",
      "description": "The Type of Vehicle for a specific Vehicle"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/forgot": {
      "get": {
        "tags": [
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Forgot Password",
        "operationId": "getPasswordReset",
        "description": "Get a new password for the owner",
        "parameters": [
          {
            "name": "owner_id",
            "in": "query",
            "description": "The ID of the Owner",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.owner_id": "method.request.querystring.owner_id"
          },
          "uri": "https://demo.citewriteit.com/forgot",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "owners"
        ],
        "summary": "Login",
        "description": "Login an Owner",
        "operationId": "loginOwner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/OwnerResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Location": {
                "type": "string",
                "description": "URI of the newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "201",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "http://demo.citewriteit.com/login",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      }
    },
    "/cards": {
      "get": {
        "tags": [
          "cards"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Cards",
        "operationId": "getCards",
        "description": "Get a list of Cards",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CardResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/cards",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "cards"
        ],
        "summary": "Store a new Card",
        "description": "Stores a Card for the Owner",
        "operationId": "storeCard",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Card object that needs to be added to the Owner",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Card"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CardResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Location": {
                "type": "string",
                "description": "URI of the newly created resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "201",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "http://demo.citewriteit.com/cards",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "cards"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST,GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/cards/{cc_storage_id}": {
      "get": {
        "tags": [
          "cards"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Card",
        "operationId": "getCardById",
        "description": "Get a specific Card",
        "parameters": [
          {
            "name": "cc_storage_id",
            "in": "path",
            "description": "The ID of the object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CardResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.cc_storage_id": "method.request.path.cc_storage_id"
          },
          "uri": "https://demo.citewriteit.com/cards/{cc_storage_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "cards"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Card",
        "operationId": "updateCard",
        "description": "Update a specific Card",
        "parameters": [
          {
            "name": "cc_storage_id",
            "in": "path",
            "description": "The ID of the Card object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The Card object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Card"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CardResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.cc_storage_id": "method.request.path.cc_storage_id"
          },
          "uri": "https://demo.citewriteit.com/cards/{cc_storage_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "cards"
        ],
        "summary": "Delete Card",
        "description": "Delete a Card for the Owner",
        "operationId": "deleteCard",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cc_storage_id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "The ID of the Card to delete"
          },
          {
            "in": "header",
            "name": "X-CSRF-Token",
            "required": true,
            "type": "string",
            "description": "The token of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "required": [
                "success"
              ],
              "properties": {
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Card"
          },
          "404": {
            "description": "Card not found"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "options": {
        "tags": [
          "cards"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/cards/{cc_storage_id}/invoices": {
      "get": {
        "tags": [
          "cards",
          "invoices"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Card",
        "description": "Get a Invoices for a Card",
        "operationId": "getInvoicsesCardId",
        "parameters": [
          {
            "name": "cc_storage_id",
            "in": "path",
            "description": "The ID of the Card object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.cc_storage_id": "method.request.path.cc_storage_id",
            "integration.request.path.invoice_id": "method.request.path.invoice_id"
          },
          "uri": "https://demo.citewriteit.com/cards/{cc_storage_id}/invoices/{invoice_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "cards",
          "invoices"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/cards/{cc_storage_id}/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "cards",
          "invoices"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Invoice for a Card",
        "operationId": "getInvoiceByIdAndCardId",
        "description": "Get a specific Invoice for a Card",
        "parameters": [
          {
            "name": "cc_storage_id",
            "in": "path",
            "description": "The ID of the Card object",
            "required": true,
            "type": "string"
          },
          {
            "name": "invoice_id",
            "in": "path",
            "description": "The ID of the Invoice object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.cc_storage_id": "method.request.path.cc_storage_id",
            "integration.request.path.invoice_id": "method.request.path.invoice_id"
          },
          "uri": "https://demo.citewriteit.com/cards/{cc_storage_id}/invoices/{invoice_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "cards",
          "invoices"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Link Invoices to Cards",
        "operationId": "linkInvoicesIdToCardsId",
        "description": "Link Invoices to the Cards object",
        "parameters": [
          {
            "name": "cc_storage_id",
            "in": "path",
            "description": "The ID of the Cards object",
            "required": true,
            "type": "string"
          },
          {
            "name": "invoice_id",
            "in": "path",
            "description": "The ID of the Invoices object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.cc_storage_id": "method.request.path.cc_storage_id",
            "integration.request.path.invoice_id": "method.request.path.invoice_id"
          },
          "uri": "https://demo.citewriteit.com/cards/{cc_storage_id}/invoices/{invoice_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "cards",
          "invoices"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Unlink Invoices From Cards",
        "operationId": "unlinkInvoicesIdFromCardsId",
        "description": "Remove the link between a Invoices object and a Cards object",
        "parameters": [
          {
            "name": "cc_storage_id",
            "in": "path",
            "description": "The ID of the Cards object",
            "required": true,
            "type": "string"
          },
          {
            "name": "invoice_id",
            "in": "path",
            "description": "The ID of the Invoices object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.cc_storage_id": "method.request.path.cc_storage_id",
            "integration.request.path.invoice_id": "method.request.path.invoice_id"
          },
          "uri": "https://demo.citewriteit.com/cards/{cc_storage_id}/invoices/{invoice_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "cards",
          "invoices"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/invoices": {
      "get": {
        "tags": [
          "invoices"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Invoices",
        "operationId": "getInvoices",
        "description": "Get a list of Invoices",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/invoices",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "invoices"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Invoice",
        "description": "Create a Invoice",
        "operationId": "createInvoice",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Invoice object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "https://demo.citewriteit.com/invoices",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "invoices"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "invoices"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get an Invoice",
        "operationId": "getInvoiceById",
        "description": "Get a specific Invoice",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "description": "The ID of the Invoice object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.invoice_id": "method.request.path.invoice_id"
          },
          "uri": "https://demo.citewriteit.com/invoices/{invoice_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "invoices"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Invoice",
        "operationId": "updateInvoice",
        "description": "Update a specific Invoice",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "description": "The ID of the Invoice object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The Invoice object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.invoice_id": "method.request.path.invoice_id"
          },
          "uri": "https://demo.citewriteit.com/invoices/{invoice_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "invoices"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Invoice",
        "operationId": "deleteInvoice",
        "description": "Delete a specific Invoice",
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "description": "The ID of the Invoice object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.invoice_id": "method.request.path.invoice_id"
          },
          "uri": "https://demo.citewriteit.com/invoices/{invoice_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "invoices"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/lots": {
      "get": {
        "tags": [
          "lots"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Lots",
        "operationId": "getLots",
        "description": "Get a list of Lots",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LotResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/lots",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "lots"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Lot",
        "operationId": "createLot",
        "description": "Create a Lot",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Lot object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Lot"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LotResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "https://demo.citewriteit.com/lots",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "lots"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/lots/{lot_id}": {
      "get": {
        "tags": [
          "lots"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Lot",
        "operationId": "getLotById",
        "description": "Get a specific Lot",
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The ID of the lot object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LotResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.lot_id": "method.request.path.lot_id"
          },
          "uri": "https://demo.citewriteit.com/lots/{lot_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "lots"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Lot",
        "operationId": "updateLot",
        "description": "Update a specific Lot",
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The ID of the Lot object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The Lot object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Lot"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LotResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.lot_id": "method.request.path.lot_id"
          },
          "uri": "https://demo.citewriteit.com/lots/{lot_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "lots"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Lot",
        "operationId": "deleteLot",
        "description": "Delete a specific Lot",
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The ID of the Lot object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.lot_id": "method.request.path.lot_id"
          },
          "uri": "https://demo.citewriteit.com/lots/{lot_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "lots"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/lots/{lot_id}/permits": {
      "get": {
        "tags": [
          "lots",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Permits for a Lot",
        "operationId": "getPermitsByLotId",
        "description": "Get a list of Permits for a specific Lot",
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The ID of the Lot object",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.lot_id": "method.request.path.lot_id",
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/lots/{lot_id}/permits",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "lots",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create and Link Permit to Lot",
        "description": "Create and link a Permit object to Lot",
        "operationId": "createAndLinkPermitToLotId",
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The ID of the Lot object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The Permit object",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/Permit"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Location": {
                "type": "string",
                "description": "URI that may access the new linked resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.lot_id": "method.request.path.lot_id"
          },
          "uri": "https://demo.citewriteit.com/lots/{lot_id}/permits",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "lots",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/lots/{lot_id}/permits/{mpermit_id}": {
      "get": {
        "tags": [
          "lots",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Permit for a Lot",
        "operationId": "getPermitByIdAndLotId",
        "description": "Get a specific Permit for a Lot",
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The ID of the Lot object",
            "required": true,
            "type": "string"
          },
          {
            "name": "mpermit_id",
            "in": "path",
            "description": "The ID of the Permit object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.lot_id": "method.request.path.lot_id",
            "integration.request.path.mpermit_id": "method.request.path.mpermit_id"
          },
          "uri": "https://demo.citewriteit.com/lots/{lot_id}/permits/{mpermit_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "lots",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Link Permit to Lot",
        "operationId": "linkPermitIdToLotId",
        "description": "Link Permit to the Lot object",
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The ID of the Lot object",
            "required": true,
            "type": "string"
          },
          {
            "name": "mpermit_id",
            "in": "path",
            "description": "The ID of the Permit object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.lot_id": "method.request.path.lot_id",
            "integration.request.path.mpermit_id": "method.request.path.mpermit_id"
          },
          "uri": "https://demo.citewriteit.com/lots/{lot_id}/permits/{mpermit_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "lots",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Unlink Permit From Lot",
        "operationId": "unlinkPermitIdFromLotId",
        "description": "Remove the link between a Permit object and a Lot object",
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The ID of the Lot object",
            "required": true,
            "type": "string"
          },
          {
            "name": "mpermit_id",
            "in": "path",
            "description": "The ID of the Permit object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.lot_id": "method.request.path.lot_id",
            "integration.request.path.mpermit_id": "method.request.path.mpermit_id"
          },
          "uri": "https://demo.citewriteit.com/lots/{lot_id}/permits/{mpermit_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "lots",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/lots/{lot_id}/meters": {
      "get": {
        "tags": [
          "lots",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Meters for a Lot",
        "operationId": "getMetersByLotId",
        "description": "Get list of Meters for a specific Lot",
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The ID of the Lot object",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MeterResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity",
            "integration.request.path.lot_id": "method.request.path.lot_id"
          },
          "uri": "https://demo.citewriteit.com/lots/{lot_id}/meters",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "lots",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create and Link Meter to Lot",
        "description": "Create and link a Meter object to Lot",
        "operationId": "createAndLinkMeterToLotId",
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The ID of the Lot object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The Meter object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Meter"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MeterResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Location": {
                "type": "string",
                "description": "URI that may access the new linked resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.lot_id": "method.request.path.lot_id"
          },
          "uri": "https://demo.citewriteit.com/lots/{lot_id}/meters",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "lots",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/lots/{lot_id}/meters/{meter_id}": {
      "get": {
        "tags": [
          "lots",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Meter linked a Lot",
        "operationId": "getMeterByIdLinkedToLotId",
        "description": "Get a specific Meter linked to a specific Lot",
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The ID of the Lot object",
            "required": true,
            "type": "string"
          },
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MeterResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.lot_id": "method.request.path.lot_id",
            "integration.request.path.meter_id": "method.request.path.meter_id"
          },
          "uri": "https://demo.citewriteit.com/lots/{lot_id}/meters/{meter_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "lots",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Link Meter to Lot",
        "operationId": "linkMeterIdToLotId",
        "description": "Link Meter to the Lot object",
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The ID of the Lot object",
            "required": true,
            "type": "string"
          },
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MeterResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.lot_id": "method.request.path.lot_id",
            "integration.request.path.meter_id": "method.request.path.meter_id"
          },
          "uri": "https://demo.citewriteit.com/lots/{lot_id}/meters/{meter_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "lots",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Unlink Meter From Lot",
        "operationId": "unlinkMeterIdFromLotId",
        "description": "Remove the link between a Meter object and a Lot object",
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The ID of the Lot object",
            "required": true,
            "type": "string"
          },
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.lot_id": "method.request.path.lot_id",
            "integration.request.path.meter_id": "method.request.path.meter_id"
          },
          "uri": "https://demo.citewriteit.com/lots/{lot_id}/meters/{meter_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "lots",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/meters": {
      "get": {
        "tags": [
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Meters",
        "operationId": "getMeters",
        "description": "Get a list of Meters",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MeterResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/meters",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Meter",
        "operationId": "createMeter",
        "description": "Create a Meter",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Meter object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Meter"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MeterResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "https://demo.citewriteit.com/meters",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/meters/{meter_id}": {
      "get": {
        "tags": [
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Meter",
        "operationId": "getMeterById",
        "description": "Get a specific Meter",
        "parameters": [
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MeterResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.meter_id": "method.request.path.meter_id"
          },
          "uri": "https://demo.citewriteit.com/meters/{meter_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Meter",
        "operationId": "updateMeter",
        "description": "Update a specific Meter",
        "parameters": [
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The Meter object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Meter"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MeterResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.meter_id": "method.request.path.meter_id"
          },
          "uri": "https://demo.citewriteit.com/meters/{meter_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Meter",
        "operationId": "deleteMeter",
        "description": "Delete a specific Meter",
        "parameters": [
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.meter_id": "method.request.path.meter_id"
          },
          "uri": "https://demo.citewriteit.com/meters/{meter_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/meters/{meter_id}/purchases": {
      "get": {
        "tags": [
          "meters",
          "purchases"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Meter Purchases",
        "operationId": "getPurchasesByMeterId",
        "description": "Get a list of purchases from a Meter",
        "parameters": [
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.meter_id": "method.request.path.meter_id",
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/meters/{meter_id}/purchases",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "meters",
          "purchases"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create and Link Purchase to Meter",
        "description": "Create and link a Purchase object to Meter",
        "operationId": "createAndLinkPurchaseToMeterId",
        "parameters": [
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The Purchase object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Purchase"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PurchaseResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Location": {
                "type": "string",
                "description": "URI that may access the new linked resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.meter_id": "method.request.path.meter_id"
          },
          "uri": "https://demo.citewriteit.com/meters/{meter_id}/purchases",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "meters",
          "purchases"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/meters/{meter_id}/purchases/{purchase_id}": {
      "get": {
        "tags": [
          "meters",
          "purchases"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Purchase from Meter",
        "operationId": "getPurchaseByIdAndMeterId",
        "description": "Get a specific Purchase for a Meter",
        "parameters": [
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "purchase_id",
            "in": "path",
            "description": "The ID of the Purchase object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.meter_id": "method.request.path.meter_id",
            "integration.request.path.purchase_id": "method.request.path.purchase_id"
          },
          "uri": "https://demo.citewriteit.com/meters/{meter_id}/purchases/{purchase_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "meters",
          "purchases"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Link Purchase to Meter",
        "operationId": "linkPurchaseIdToMeterId",
        "description": "Link Purchase to the Meter object",
        "parameters": [
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "purchase_id",
            "in": "path",
            "description": "The ID of the Purchase object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PurchaseResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.meter_id": "method.request.path.meter_id",
            "integration.request.path.purchase_id": "method.request.path.purchase_id"
          },
          "uri": "https://demo.citewriteit.com/meters/{meter_id}/purchases/{purchase_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "meters",
          "purchases"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Unlink Purchase From Meter",
        "operationId": "unlinkPurchaseIdFromMeterId",
        "description": "Remove the link between a Purchase object and a Meter object",
        "parameters": [
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "purchase_id",
            "in": "path",
            "description": "The ID of the Purchase object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.meter_id": "method.request.path.meter_id",
            "integration.request.path.purchase_id": "method.request.path.purchase_id"
          },
          "uri": "https://demo.citewriteit.com/meters/{meter_id}/purchases/{purchase_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "meters",
          "purchases"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/meters/{meter_id}/times": {
      "get": {
        "tags": [
          "meters",
          "times"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Times for a Meter",
        "operationId": "getTimesByMeterId",
        "description": "Get a list of Times for a Meter",
        "parameters": [
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Card object",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TimeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.meter_id": "method.request.path.meter_id",
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/meters/{meter_id}/times",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "meters",
          "times"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create and Link Time to Meter",
        "description": "Create and link a Time object to Meter",
        "operationId": "createAndLinkTimeToMeterId",
        "parameters": [
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The Time object",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/Time"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TimeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Location": {
                "type": "string",
                "description": "URI that may access the new linked resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.meter_id": "method.request.path.meter_id"
          },
          "uri": "https://demo.citewriteit.com/meters/{meter_id}/times",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "meters",
          "times"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/meters/{meter_id}/times/{time_id}": {
      "get": {
        "tags": [
          "meters",
          "times"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Time for a Meter",
        "operationId": "getTimeByIdAndMeterId",
        "description": "Get a specific Time for a specific Meter",
        "parameters": [
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "time_id",
            "in": "path",
            "description": "The ID of the Time object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TimeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.meter_id": "method.request.path.meter_id",
            "integration.request.path.time_id": "method.request.path.time_id"
          },
          "uri": "https://demo.citewriteit.com/meters/{meter_id}/times/{time_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "meters",
          "times"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Link Time to Meter",
        "operationId": "linkTimeIdToMeterId",
        "description": "Link Time to the Meter object",
        "parameters": [
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "time_id",
            "in": "path",
            "description": "The ID of the Time object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TimeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.meter_id": "method.request.path.meter_id",
            "integration.request.path.time_id": "method.request.path.time_id"
          },
          "uri": "https://demo.citewriteit.com/meters/{meter_id}/times/{time_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "meters",
          "times"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Unlink Time From Meter",
        "operationId": "unlinkTimeIdFromMeterId",
        "description": "Remove the link between a Time object and a Meter object",
        "parameters": [
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "time_id",
            "in": "path",
            "description": "The ID of the Time object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.meter_id": "method.request.path.meter_id",
            "integration.request.path.time_id": "method.request.path.time_id"
          },
          "uri": "https://demo.citewriteit.com/meters/{meter_id}/times/{time_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "meters",
          "times"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owners": {
      "get": {
        "tags": [
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Owners",
        "operationId": "getOwners",
        "description": "Get a list of Owners",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/OwnerResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/owners",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Owner",
        "description": "Create a Owner",
        "operationId": "createOwner",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Owner object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Owner"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/OwnerResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "https://demo.citewriteit.com/owners",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owners/{owner_id}": {
      "get": {
        "tags": [
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get an Owner",
        "operationId": "getOwnerById",
        "description": "Get a specific Owner",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/OwnerResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Owner",
        "operationId": "updateOwner",
        "description": "Update a specific Owner",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The Owner object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Owner"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/OwnerResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Owner",
        "operationId": "deleteOwner",
        "description": "Delete a specific Owner",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owners/{owner_id}/cards": {
      "get": {
        "tags": [
          "owners",
          "cards"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Links from Card to Owner",
        "description": "Get a list of Card objects linked to a specific Owner",
        "operationId": "getCardLinkedToOwnerId",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CardResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/cards",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "owners",
          "cards"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create and Link Card to Owner",
        "operationId": "createAndLinkCardToOwnerId",
        "description": "Create and link a Card object to Owner",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the owner",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The Card object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Card"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CardResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Location": {
                "type": "string",
                "description": "URI that may access the new linked resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/cards",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "owners",
          "cards"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owners/{owner_id}/cards/{cc_storage_id}": {
      "get": {
        "tags": [
          "cards",
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Card",
        "description": "Get a specific Card for an Owner",
        "operationId": "getCardByOwnerIdAndCardId",
        "parameters": [
          {
            "name": "cc_storage_id",
            "in": "path",
            "description": "The ID of the Card object",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CardResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.cc_storage_id": "method.request.path.cc_storage_id",
            "integration.request.path.owner_id": "method.request.path.owner_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/cards/{cc_storage_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "owners",
          "cards"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Link Card to Owner",
        "operationId": "linkCardIdToOwnerId",
        "description": "Link Card to the Owner object",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "cc_storage_id",
            "in": "path",
            "description": "The ID of the Card object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CardResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.path.cc_storage_id": "method.request.path.cc_storage_id"
          },
          "uri": "https://demo.citewriteit.com/owner/{owner_id}/cards/{cc_storage_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "owners",
          "cards"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Unlink Card From Owner",
        "operationId": "unlinkCardIdFromOwnerId",
        "description": "Remove the link between a Card object and a Owner object",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "cc_storage_id",
            "in": "path",
            "description": "The ID of the Card object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.path.cc_storage_id": "method.request.path.cc_storage_id"
          },
          "uri": "https://demo.citewriteit.com/owner/{owner_id}/cards/{cc_storage_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "owners",
          "cards"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owners/{owner_id}/cards/{cc_storage_id}/invoices": {
      "get": {
        "tags": [
          "invoices",
          "owners",
          "cards"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Invoices",
        "description": "Get a complete list of Invoices for the Owner",
        "operationId": "getInvoicesByOwnerIdAndCardId",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner",
            "required": true,
            "type": "string"
          },
          {
            "name": "cc_storage_id",
            "in": "path",
            "description": "The ID of the Card",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "The starting point for the Invoices",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of Invoices to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity",
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.path.cc_storage_id": "method.request.path.cc_storage_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/cards/{cc_storage_id}/invoices",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "owners",
          "cards",
          "invoices"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owners/{owner_id}/details": {
      "get": {
        "tags": [
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Owner Details",
        "operationId": "getOwnerDetailsByOwnerId",
        "description": "Get a specific Owner Details",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/OwnerDetailsResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/details",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owners/{owner_id}/invoices": {
      "get": {
        "tags": [
          "invoices",
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Invoices",
        "description": "Get a complete list of Invoices for the Owner",
        "operationId": "getInvoicesByOwnerId",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "The starting point for the Invoices",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of Invoices to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity",
            "integration.request.path.owner_id": "method.request.path.owner_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/invoices",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "invoices",
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owners/{owner_id}/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "invoices",
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Invoices",
        "description": "Get a complete list of Invoices for the Owner",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner",
            "required": true,
            "type": "string"
          },
          {
            "name": "invoice_id",
            "in": "path",
            "description": "The ID of the Invoice",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/InvoiceResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.path.invoice_id": "method.request.path.invoice_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/invoices/{invoice_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "owners",
          "invoices"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owners/{owner_id}/permits": {
      "get": {
        "tags": [
          "owners",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Links from Permit to Owner",
        "description": "Get a list of Permit objects linked to a specific Owner",
        "operationId": "getPermitLinkedToOwnerId",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/permits",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "owners",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create and Link Permit to Owner",
        "operationId": "createAndLinkPermitToOwnerId",
        "description": "Create and link a Permit object to Owner",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Permit object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Permit"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Location": {
                "type": "string",
                "description": "URI that may access the new linked resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/permits",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "owners",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owners/{owner_id}/permits/{mpermit_id}": {
      "get": {
        "tags": [
          "owners",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Permit linked a Owner",
        "operationId": "getPermitByIdLinkedToOwnerId",
        "description": "Get a specific Permit linked to a specific Owner",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "mpermit_id",
            "in": "path",
            "description": "The ID of the Permit object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.path.mpermit_id": "method.request.path.mpermit_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/permits/{mpermit_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "owners",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Link Permit to Owner",
        "operationId": "linkPermitIdToOwnerId",
        "description": "Link Permit to the Owner object",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "mpermit_id",
            "in": "path",
            "description": "The ID of the Permit object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.path.mpermit_id": "method.request.path.mpermit_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/permits/{mpermit_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "owners",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Unlink Permit From Owner",
        "operationId": "unlinkPermitIdFromOwnerId",
        "description": "Remove the link between a Permit object and a Owner object",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "mpermit_id",
            "in": "path",
            "description": "The ID of the Permit object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.path.mpermit_id": "method.request.path.mpermit_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/permits/{mpermit_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "owners",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owners/{owner_id}/meters": {
      "get": {
        "tags": [
          "owners",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Links from Meter to Owner",
        "description": "Get a list of Meter objects linked to a specific Owner",
        "operationId": "getMeterLinkedToOwnerId",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MeterResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/meters",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "owners",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create and Link Meter to Owner",
        "operationId": "createAndLinkMeterToOwnerId",
        "description": "Create and link a Meter object to Owner",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Meter object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Meter"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MeterResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Location": {
                "type": "string",
                "description": "URI that may access the new linked resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/meters",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "owners",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owners/{owner_id}/meters/{meter_id}": {
      "get": {
        "tags": [
          "owners",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Meter linked to an Owner",
        "operationId": "getMeterByIdLinkedToOwnerId",
        "description": "Get a specific Meter linked to a specific Owner",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MeterResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.path.meter_id": "method.request.path.meter_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/meters/{meter_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "owners",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Link Meter to Owner",
        "operationId": "linkMeterIdToOwnerId",
        "description": "Link Meter to the Owner object",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MeterResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.path.meter_id": "method.request.path.meter_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/meters/{meter_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "owners",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Unlink Meter From Owner",
        "operationId": "unlinkMeterIdFromOwnerId",
        "description": "Remove the link between a Meter object and a Owner object",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "meter_id",
            "in": "path",
            "description": "The ID of the Meter object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.path.meter_id": "method.request.path.meter_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/meters/{meter_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "owners",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owners/{owner_id}/vehicles": {
      "get": {
        "tags": [
          "vehicles",
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Owner Vehicles",
        "operationId": "getVehiclesByOwnerId",
        "description": "Get a list of Vehicles objects",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/VehicleResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/vehicles",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "owners",
          "vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create and Link Vehicle to Owner",
        "description": "Create and link a Vehicle object to Owner",
        "operationId": "createAndLinkVehicleToOwnerId",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The Vehicle object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/VehicleResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Location": {
                "type": "string",
                "description": "URI that may access the new linked resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/vehicles",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "vehicles",
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owners/{owner_id}/vehicles/{vehicle_id}": {
      "get": {
        "tags": [
          "owners",
          "vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Vehicle linked to an Owner",
        "operationId": "getVehicleByIdLinkedToOwnerId",
        "description": "Get a specific Vehicle linked to a specific Owner",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "vehicle_id",
            "in": "path",
            "description": "The ID of the Vehicle object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/VehicleResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.path.vehicle_id": "method.request.path.vehicle_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/vehicles/{vehicle_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "owners",
          "vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Link Vehicle to Owner",
        "operationId": "linkVehicleIdToOwnerId",
        "description": "Link Vehicle to the Owner object",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "vehicle_id",
            "in": "path",
            "description": "The ID of the Vehicle object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/VehicleResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.path.vehicle_id": "method.request.path.vehicle_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/vehicles/{vehicle_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "owners",
          "vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Unlink Vehicle From Owner",
        "operationId": "unlinkVehicleIdFromOwnerId",
        "description": "Remove the link between a Vehicle object and a Owner object",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner object",
            "required": true,
            "type": "string"
          },
          {
            "name": "vehicle_id",
            "in": "path",
            "description": "The ID of the Vehicle object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_id": "method.request.path.owner_id",
            "integration.request.path.vehicle_id": "method.request.path.vehicle_id"
          },
          "uri": "https://demo.citewriteit.com/owners/{owner_id}/vehicles/{vehicle_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "vehicles",
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owners/{owner_id}/settings": {
      "options": {
        "tags": [
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "description": "The ID of the Owner",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owner_attributes": {
      "get": {
        "tags": [
          "owners",
          "owner_attributes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Owner Attributes",
        "operationId": "getOwnerAttributes",
        "description": "Get a list of OwnerAttribute objects",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/OwnerAttributeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/owner_attributes",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "owner_attributes",
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create OwnerAttribute",
        "description": "Create a OwnerAttribute",
        "operationId": "createOwnerAttribute",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The OwnerAttribute object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OwnerAttribute"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/OwnerAttributeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "https://demo.citewriteit.com/owner_attributes",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "owners",
          "owner_attributes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/owner_attributes/{owner_attr_id}": {
      "get": {
        "tags": [
          "owner_attributes",
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get OwnerAttribute",
        "operationId": "getOwnerAttributeById",
        "description": "Get a specific OwnerAttribute",
        "parameters": [
          {
            "name": "owner_attr_id",
            "in": "path",
            "description": "The ID of the OwnerAttribute object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/OwnerAttributeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_attr_id": "method.request.path.owner_attr_id"
          },
          "uri": "https://demo.citewriteit.com/owner_attributes/{owner_attr_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "owner_attributes",
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update OwnerAttribute",
        "operationId": "updateOwnerAttribute",
        "description": "Update a specific OwnerAttribute",
        "parameters": [
          {
            "name": "owner_attr_id",
            "in": "path",
            "description": "The ID of the OwnerAttribute object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The OwnerAttribute object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OwnerAttribute"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/OwnerAttributeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_attr_id": "method.request.path.owner_attr_id"
          },
          "uri": "https://demo.citewriteit.com/owner_attributes/{owner_attr_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "owner_attributes",
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete OwnerAttribute",
        "operationId": "deleteOwnerAttribute",
        "description": "Delete a specific OwnerAttribute",
        "parameters": [
          {
            "name": "owner_attr_id",
            "in": "path",
            "description": "The ID of the OwnerAttribute object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.owner_attr_id": "method.request.path.owner_attr_id"
          },
          "uri": "https://demo.citewriteit.com/owner_attributes/{owner_attr_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/permits": {
      "get": {
        "tags": [
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Permits",
        "operationId": "getPermits",
        "description": "Get a list of Permit objects",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/permits",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Permit",
        "description": "Create a Permit",
        "operationId": "createPermit",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Permit object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Permit"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "https://demo.citewriteit.com/permits",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/permits/{mpermit_id}": {
      "get": {
        "tags": [
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Permit",
        "operationId": "getPermitById",
        "description": "Get a specific Permit",
        "parameters": [
          {
            "name": "mpermit_id",
            "in": "path",
            "description": "The ID of the Permit object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.mpermit_id": "method.request.path.mpermit_id"
          },
          "uri": "https://demo.citewriteit.com/permits/{mpermit_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Permit",
        "operationId": "updatePermit",
        "description": "Update a specific Permit",
        "parameters": [
          {
            "name": "mpermit_id",
            "in": "path",
            "description": "The ID of the Permit object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The Permit object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Permit"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.mpermit_id": "method.request.path.mpermit_id"
          },
          "uri": "https://demo.citewriteit.com/permits/{mpermit_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Permit",
        "operationId": "deletePermit",
        "description": "Delete a specific Permit",
        "parameters": [
          {
            "name": "mpermit_id",
            "in": "path",
            "description": "The ID of the Permit object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.mpermit_id": "method.request.path.mpermit_id"
          },
          "uri": "https://demo.citewriteit.com/permits/{mpermit_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/permit_attributes": {
      "get": {
        "tags": [
          "permits",
          "permit_attributes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Permit Attributes",
        "operationId": "getPermitAttributes",
        "description": "Get a list of PermitAttribute objects",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitAttributeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/permit_attributes",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "permit_attributes",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create PermitAttribute",
        "description": "Create a PermitAttribute",
        "operationId": "createPermitAttribute",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The PermitAttribute object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermitAttribute"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitAttributeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "https://demo.citewriteit.com/permit_attributes",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/permit_attributes/{mpermit_attr_id}": {
      "get": {
        "tags": [
          "permit_attributes",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get PermitAttribute",
        "operationId": "getPermitAttributeById",
        "description": "Get a specific PermitAttribute",
        "parameters": [
          {
            "name": "mpermit_attr_id",
            "in": "path",
            "description": "The ID of the PermitAttribute object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitAttributeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.mpermit_attr_id": "method.request.path.mpermit_attr_id"
          },
          "uri": "https://demo.citewriteit.com/permit_attributes/{mpermit_attr_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "permit_attributes",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update PermitAttribute",
        "operationId": "updatePermitAttribute",
        "description": "Update a specific PermitAttribute",
        "parameters": [
          {
            "name": "mpermit_attr_id",
            "in": "path",
            "description": "The ID of the PermitAttribute object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The PermitAttribute object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermitAttribute"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitAttributeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.mpermit_attr_id": "method.request.path.mpermit_attr_id"
          },
          "uri": "https://demo.citewriteit.com/permit_attributes/{mpermit_attr_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "permit_attributes",
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete PermitAttribute",
        "operationId": "deletePermitAttribute",
        "description": "Delete a specific PermitAttribute",
        "parameters": [
          {
            "name": "mpermit_attr_id",
            "in": "path",
            "description": "The ID of the PermitAttribute object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.mpermit_attr_id": "method.request.path.mpermit_attr_id"
          },
          "uri": "https://demo.citewriteit.com/permit_attributes/{mpermit_attr_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "permits"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/permit_types": {
      "get": {
        "tags": [
          "permit_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List PermitTypes",
        "operationId": "getPermitTypes",
        "description": "Get a list of PermitType objects",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitTypeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/permit_types",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "permit_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create PermitType",
        "description": "Create a PermitType",
        "operationId": "createPermitType",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The PermitType object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermitType"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitTypeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "https://demo.citewriteit.com/permit_types",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "permit_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/permit_types/{mpermit_type_id}": {
      "get": {
        "tags": [
          "permit_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get PermitType",
        "operationId": "getPermitTypeById",
        "description": "Get a specific PermitType",
        "parameters": [
          {
            "name": "mpermit_type_id",
            "in": "path",
            "description": "The ID of the PermitType object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitTypeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.mpermit_type_id": "method.request.path.mpermit_type_id"
          },
          "uri": "https://demo.citewriteit.com/permit_types/{mpermit_type_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "permit_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update PermitType",
        "operationId": "updatePermitType",
        "description": "Update a specific PermitType",
        "parameters": [
          {
            "name": "mpermit_type_id",
            "in": "path",
            "description": "The ID of the PermitType object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The PermitType object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermitType"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitTypeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.mpermit_type_id": "method.request.path.mpermit_type_id"
          },
          "uri": "https://demo.citewriteit.com/permit_types/{mpermit_type_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "permit_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete PermitType",
        "operationId": "deletePermitType",
        "description": "Delete a specific PermitType",
        "parameters": [
          {
            "name": "mpermit_type_id",
            "in": "path",
            "description": "The ID of the PermitType object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.mpermit_type_id": "method.request.path.mpermit_type_id"
          },
          "uri": "https://demo.citewriteit.com/permit_types/{mpermit_type_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "permit_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/permit_type_attributes": {
      "get": {
        "tags": [
          "permit_type_attributes",
          "permit_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Permit Type Attributes",
        "operationId": "getPermitTypeAttributes",
        "description": "Get a list of PermitTypeAttribute objects",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitTypeAttributeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/permit_type_attributes",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "permit_type_attributes",
          "permit_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create PermitTypeAttribute",
        "description": "Create a PermitTypeAttribute",
        "operationId": "createPermitTypeAttribute",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The PermitTypeAttribute object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermitTypeAttribute"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitTypeAttributeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "https://demo.citewriteit.com/permit_type_attributes",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "permit_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/permit_type_attributes/{mpermit_type_attr_id}": {
      "get": {
        "tags": [
          "permit_type_attributes",
          "permit_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Permit Type Attribute",
        "operationId": "getPermitTypeAttributeById",
        "description": "Get a specific PermitTypeAttribute",
        "parameters": [
          {
            "name": "mpermit_type_attr_id",
            "in": "path",
            "description": "The ID of the object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitTypeAttributeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.mpermit_type_attr_id": "method.request.path.mpermit_type_attr_id"
          },
          "uri": "https://demo.citewriteit.com/permit_type_attributes/{mpermit_type_attr_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "permit_type_attributes",
          "permit_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update PermitTypeAttribute",
        "operationId": "updatePermitTypeAttribute",
        "description": "Update a specific PermitTypeAttribute",
        "parameters": [
          {
            "name": "mpermit_type_attr_id",
            "in": "path",
            "description": "The ID of the PermitTypeAttribute object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The PermitTypeAttribute object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PermitTypeAttribute"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PermitTypeAttributeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.mpermit_type_attr_id": "method.request.path.mpermit_type_attr_id"
          },
          "uri": "https://demo.citewriteit.com/permit_type_attributes/{mpermit_type_attr_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "permit_type_attributes",
          "permit_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete PermitTypeAttribute",
        "operationId": "deletePermitTypeAttribute",
        "description": "Delete a specific PermitTypeAttribute",
        "parameters": [
          {
            "name": "mpermit_type_attr_id",
            "in": "path",
            "description": "The ID of the PermitTypeAttribute object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.mpermit_type_attr_id": "method.request.path.mpermit_type_attr_id"
          },
          "uri": "https://demo.citewriteit.com/permit_type_attributes/{mpermit_type_attr_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "permit_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/privileges": {
      "get": {
        "tags": [
          "privileges"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Privileges",
        "operationId": "getPrivileges",
        "description": "Get a list of Privilege objects",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PrivilegeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/privileges",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "privileges"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Privilege",
        "description": "Create a Privilege",
        "operationId": "createPrivilege",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Privilege object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Privilege"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PrivilegeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "https://demo.citewriteit.com/privileges",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "privileges"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/privileges/{codeid}": {
      "get": {
        "tags": [
          "privileges"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Privilege",
        "operationId": "getPrivilegeById",
        "description": "Get a specific Privilege",
        "parameters": [
          {
            "name": "codeid",
            "in": "path",
            "description": "The ID of the Privilege object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PrivilegeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.codeid": "method.request.path.codeid"
          },
          "uri": "https://demo.citewriteit.com/privileges/{codeid}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "privileges"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Privilege",
        "operationId": "updatePrivilege",
        "description": "Update a specific Privilege",
        "parameters": [
          {
            "name": "codeid",
            "in": "path",
            "description": "The ID of the Privilege object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The Privilege object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Privilege"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PrivilegeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.codeid": "method.request.path.codeid"
          },
          "uri": "https://demo.citewriteit.com/privileges/{codeid}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "privileges"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Privilege",
        "operationId": "deletePrivilege",
        "description": "Delete a specific Privilege",
        "parameters": [
          {
            "name": "codeid",
            "in": "path",
            "description": "The ID of the Privilege object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.codeid": "method.request.path.codeid"
          },
          "uri": "https://demo.citewriteit.com/privileges/{codeid}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "privileges"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/states": {
      "get": {
        "tags": [
          "states"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List States",
        "operationId": "getStates",
        "description": "Get a list of State objects",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/StateResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/states",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "states"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create State",
        "description": "Create a State",
        "operationId": "createState",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The State object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/State"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
			  "schema": {
                "$ref": "#/definitions/StateResponse"
              },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Location": {
                "type": "string",
                "description": "URI that may access the new object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "https://demo.citewriteit.com/states",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "states"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/states/{codeid}": {
      "get": {
        "tags": [
          "states"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get State",
        "operationId": "getStateById",
        "description": "Get a specific State",
        "parameters": [
          {
            "name": "codeid",
            "in": "path",
            "description": "The ID of the State object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
			  "schema": {
                "$ref": "#/definitions/StateResponse"
              },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.codeid": "method.request.path.codeid"
          },
          "uri": "https://demo.citewriteit.com/states/{codeid}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "states"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update State",
        "operationId": "updateState",
        "description": "Update a specific State",
        "parameters": [
          {
            "name": "codeid",
            "in": "path",
            "description": "The ID of the State object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The State object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/State"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
			  "schema": {
                "$ref": "#/definitions/StateResponse"
              },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.codeid": "method.request.path.codeid"
          },
          "uri": "https://demo.citewriteit.com/states/{codeid}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "states"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete State",
        "operationId": "deleteState",
        "description": "Delete a specific State",
        "parameters": [
          {
            "name": "codeid",
            "in": "path",
            "description": "The ID of the State object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.codeid": "method.request.path.codeid"
          },
          "uri": "https://demo.citewriteit.com/states/{codeid}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "states"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/times": {
      "get": {
        "tags": [
          "times"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Times",
        "operationId": "getTimes",
        "description": "Get a list of Time objects",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TimeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/times",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "times",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Time",
        "description": "Create a Time",
        "operationId": "createTime",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Time object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Time"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TimeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "https://demo.citewriteit.com/times",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "times",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/times/{mpermit_metered_time_id}": {
      "get": {
        "tags": [
          "times",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Time",
        "operationId": "getTimeById",
        "description": "Get a specific Time object",
        "parameters": [
          {
            "name": "mpermit_metered_time_id",
            "in": "path",
            "description": "The ID of the object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TimeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.mpermit_metered_time_id": "method.request.path.mpermit_metered_time_id"
          },
          "uri": "https://demo.citewriteit.com/times/{mpermit_metered_time_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "times",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Time",
        "operationId": "updateTime",
        "description": "Update a specific Time",
        "parameters": [
          {
            "name": "mpermit_metered_time_id",
            "in": "path",
            "description": "The ID of the Time object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The Time object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Time"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TimeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.mpermit_metered_time_id": "method.request.path.mpermit_metered_time_id"
          },
          "uri": "https://demo.citewriteit.com/times/{mpermit_metered_time_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "times",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Time",
        "operationId": "deleteTime",
        "description": "Delete a specific Time",
        "parameters": [
          {
            "name": "mpermit_metered_time_id",
            "in": "path",
            "description": "The ID of the Time object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.mpermit_metered_time_id": "method.request.path.mpermit_metered_time_id"
          },
          "uri": "https://demo.citewriteit.com/times/{mpermit_metered_time_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "times",
          "meters"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/vehicles": {
      "get": {
        "tags": [
          "vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List Vehicles",
        "operationId": "getVehicles",
        "description": "Get a list of Vehicle objects",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/VehicleResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/vehicles",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create Vehicle",
        "description": "Create a Vehicle",
        "operationId": "createVehicle",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Vehicle object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/VehicleResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "https://demo.citewriteit.com/vehicles",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/vehicles/{vehicle_id}": {
      "get": {
        "tags": [
          "vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a Vehicle",
        "operationId": "getVehicleById",
        "description": "Get a specific Vehicle",
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "description": "The ID of the object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/VehicleResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.vehicle_id": "method.request.path.vehicle_id"
          },
          "uri": "https://demo.citewriteit.com/vehicles/{vehicle_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update Vehicle",
        "operationId": "updateVehicle",
        "description": "Update a specific Vehicle",
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "description": "The ID of the Vehicle object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The Vehicle object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vehicle"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/VehicleResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.vehicle_id": "method.request.path.vehicle_id"
          },
          "uri": "https://demo.citewriteit.com/vehicles/{vehicle_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete Vehicle",
        "operationId": "deleteVehicle",
        "description": "Delete a specific Vehicle",
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "description": "The ID of the Vehicle object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.vehicle_id": "method.request.path.vehicle_id"
          },
          "uri": "https://demo.citewriteit.com/vehicles/{vehicle_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/vehicle_attributes": {
      "get": {
        "tags": [
          "vehicles",
          "vehicle_attributes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List VehicleAttributes",
        "operationId": "getVehicleAttributes",
        "description": "Get a list of VehicleAttributes objects",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/VehicleAttributeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/vehicle_attributes",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "vehicles",
          "vehicle_attributes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create VehicleAttribute",
        "description": "Create a VehicleAttribute",
        "operationId": "createVehicleAttribute",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The VehicleAttribute object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VehicleAttribute"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/VehicleAttributeResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "https://demo.citewriteit.com/vehicle_attribute",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "vehicles",
          "vehicle_attributes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/vehicle_attributes/{vehicle_attr_id}": {
      "get": {
        "tags": [
          "vehicles",
          "vehicle_attributes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a VehicleAttribute",
        "operationId": "getVehicleAttributeById",
        "description": "Get a specific VehicleAttribute object",
        "parameters": [
          {
            "name": "vehicle_attr_id",
            "in": "path",
            "description": "The ID of the object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
			  "schema": {
                "$ref": "#/definitions/VehicleAttributeResponse"
              },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.vehicle_attr_id": "method.request.path.vehicle_attr_id"
          },
          "uri": "https://demo.citewriteit.com/vehicle_attributes/{vehicle_attr_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "vehicles",
          "vehicle_attributes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update VehicleAttribute",
        "operationId": "updateVehicleAttribute",
        "description": "Update a specific VehicleAttribute",
        "parameters": [
          {
            "name": "vehicle_attr_id",
            "in": "path",
            "description": "The ID of the VehicleAttribute object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The VehicleAttribute object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VehicleAttribute"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
			  "schema": {
                "$ref": "#/definitions/VehicleAttributeResponse"
              },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.vehicle_attr_id": "method.request.path.vehicle_attr_id"
          },
          "uri": "https://demo.citewriteit.com/vehicle_attributes/{vehicle_attr_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "vehicles",
          "vehicle_attributes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete VehicleAttribute",
        "operationId": "deleteVehicleAttribute",
        "description": "Delete a specific VehicleAttribute",
        "parameters": [
          {
            "name": "vehicle_attr_id",
            "in": "path",
            "description": "The ID of the VehicleAttribute object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.vehicle_attr_id": "method.request.path.vehicle_attr_id"
          },
          "uri": "https://demo.citewriteit.com/vehicle_attributes/{vehicle_attr_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "vehicles",
          "vehicle_attributes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/vehicle_types": {
      "get": {
        "tags": [
          "vehicles",
          "vehicle_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "List VehicleTypes",
        "operationId": "getVehicleTypes",
        "description": "Get a list of VehicleType objects",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Where to start the list",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "The number of records to get",
            "required": false,
            "type": "integer"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
			  "schema": {
                "$ref": "#/definitions/VehicleTypeResponse"
              },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.start": "method.request.querystring.start",
            "integration.request.querystring.quantity": "method.request.querystring.quantity"
          },
          "uri": "https://demo.citewriteit.com/vehicle_types",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "post": {
        "tags": [
          "vehicles",
          "vehicle_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create VehicleType",
        "description": "Create a VehicleType",
        "operationId": "createVehicleType",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The VehicleType object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VehicleType"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "201": {
            "description": "Successful operation",
			  "schema": {
                "$ref": "#/definitions/VehicleTypeResponse"
              },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "uri": "https://demo.citewriteit.com/vehicle_types",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "vehicle_types",
          "vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/vehicle_types/{vehicle_type_id}": {
      "get": {
        "tags": [
          "vehicle_types",
          "vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get A Vehicle Type",
        "operationId": "getVehicleTypeById",
        "description": "Get a Vehicle Type object",
        "parameters": [
          {
            "name": "vehicle_type_id",
            "in": "path",
            "description": "The ID of the object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
			  "schema": {
                "$ref": "#/definitions/VehicleTypeResponse"
              },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.vehicle_type_id": "method.request.path.vehicle_type_id"
          },
          "uri": "https://demo.citewriteit.com/vehicle_types/{vehicle_type_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "GET",
          "type": "http"
        }
      },
      "put": {
        "tags": [
          "vehicles",
          "vehicle_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Update VehicleType",
        "operationId": "updateVehicleType",
        "description": "Update a specific VehicleType",
        "parameters": [
          {
            "name": "vehicle_type_id",
            "in": "path",
            "description": "The ID of the VehicleType object",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The VehicleType object with updated values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VehicleType"
            }
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
			  "schema": {
                "$ref": "#/definitions/VehicleTypeResponse"
              },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.vehicle_type_id": "method.request.path.vehicle_type_id"
          },
          "uri": "https://demo.citewriteit.com/vehicle_types/{vehicle_type_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "PUT",
          "type": "http"
        }
      },
      "delete": {
        "tags": [
          "vehicles",
          "vehicle_types"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete VehicleType",
        "operationId": "deleteVehicleType",
        "description": "Delete a specific VehicleType",
        "parameters": [
          {
            "name": "vehicle_type_id",
            "in": "path",
            "description": "The ID of the VehicleType object",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Api-Key",
            "in": "header",
            "description": "API Key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Not Implemented",
            "schema": {
              "$ref": "#/definitions/NotImplemented"
            }
          },
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestParameters": {
            "integration.request.path.vehicle_type_id": "method.request.path.vehicle_type_id"
          },
          "uri": "https://demo.citewriteit.com/vehicle_types/{vehicle_type_id}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "DELETE",
          "type": "http"
        }
      },
      "options": {
        "tags": [
          "vehicle_types",
          "vehicles"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "owners"
        ],
        "summary": "Logout",
        "description": "Logout the Owner",
        "operationId": "getOwnerLogout",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-CSRF-Token",
            "required": true,
            "type": "string",
            "description": "The token of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "required": [
                "success"
              ],
              "properties": {
                "success": {
                  "type": "boolean"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "options": {
        "tags": [
          "owners"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "URI that may access the resource"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "description": "Method or methods allowed when accessing the resource"
              },
              "Access-Control-Allow-Headers": {
                "type": "string",
                "description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the request."
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "type": "mock"
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "X-CSRF-Token",
      "in": "header"
    }
  },
  "definitions": {
    "Card": {
      "type": "object",
      "required": [
        "cc_storage_id",
        "owner_id",
        "alias",
        "billing_first_name",
        "billing_last_name",
        "billing_address",
        "billing_city",
        "billing_state_id",
        "billing_zip",
        "cc_number",
        "cc_type_id",
        "cc_type",
        "cc_exp_month",
        "cc_exp_year"
      ],
      "properties": {
        "cc_storage_id": {
          "type": "integer",
          "format": "int64"
        },
        "owner_id": {
          "type": "integer",
          "format": "int64"
        },
        "alias": {
          "type": "string"
        },
        "billing_first_name": {
          "type": "string"
        },
        "billing_last_name": {
          "type": "string"
        },
        "billing_address": {
          "type": "string"
        },
        "billing_city": {
          "type": "string"
        },
        "billing_state_id": {
          "type": "string"
        },
        "billing_zip": {
          "type": "string"
        },
        "cc_number": {
          "type": "string"
        },
        "cc_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "cc_type": {
          "$ref": "#/definitions/CardType"
        },
        "cc_exp_month": {
          "type": "integer",
          "format": "int64"
        },
        "cc_exp_year": {
          "type": "integer",
          "format": "int64"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "cc_storage_id": 15,
          "owner_id": 45,
          "alias": "BlingBling",
          "billing_first_name": "Papa",
          "billing_last_name": "Warbucks",
          "billing_address": "1 Money Street",
          "billing_city": "New York",
          "billing_state_id": "NY",
          "billing_zip": "10009",
          "cc_number": "411111******1111",
          "cc_type_id": 1,
          "cc_type": {
            "cc_type_id": 1,
            "name": "Visa",
            "accepted": 1,
            "image_name": "visa"
          },
          "cc_exp_month": 10,
          "cc_exp_year": 2017
        }
      }
    },
    "CardResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Card"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "CardType": {
      "type": "object",
      "required": [
        "cc_type_id",
        "name",
        "accepted"
      ],
      "properties": {
        "cc_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "accepted": {
          "type": "integer",
          "format": "int64"
        },
        "image_name": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "cc_type_id": 1,
          "name": "Visa",
          "accepted": 1,
          "image_name": "visa"
        }
      }
    },
    "CardTypeResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CardType"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "Empty": {
      "type": "object"
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "field": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "exception": {
          "type": "string"
        },
        "trace": {
          "type": "string"
        }
      },
      "example": {
        "application/json": {
          "field": "first_name",
          "message": "The field may not contain a number"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "Invoice": {
      "type": "object",
      "required": [
        "invoice_id",
        "permit_name",
        "payment_method",
        "amount",
        "period_type",
        "description"
      ],
      "properties": {
        "create_date": {
          "type": "string",
          "format": "date-time"
        },
        "payment_method": {
          "type": "string"
        },
        "permit_name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "cc_exp_month": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "cc_type": {
          "type": "string"
        },
        "cc_exp_year": {
          "type": "string"
        },
        "invoice_id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "cc_type_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "cc_number": {
          "type": "string"
        },
        "period_type": {
          "type": "string"
        },
        "permit_space": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "create_date": "2017-04-14T09:10:46",
          "payment_method": "Credit Card",
          "permit_name": "Summer 2017",
          "status": "Approved",
          "cc_exp_month": "1",
          "amount": "1.0",
          "cc_type": "1",
          "cc_exp_year": "2022",
          "invoice_id": "454",
          "type": "1",
          "cc_type_name": "Visa",
          "description": "Purchase Permit",
          "cc_number": "4111********1111",
          "period_type": "absolute",
          "permit_space": "0"
        }
      }
    },
    "InvoiceResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Invoice"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "Lot": {
      "type": "object",
      "required": [
        "lot_id",
        "number",
        "description",
        "is_hub",
        "URL"
      ],
      "properties": {
        "lot_id": {
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "URL": {
          "type": "string"
        },
        "is_hub": {
          "type": "integer",
          "format": "int64"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "lot_id": 1,
          "number": "1024",
          "description": "Nexus network",
          "URL": "http://spw-full.citewriteit.com/cws",
          "is_hub": 1
        }
      }
    },
    "LotResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Lot"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "Link": {
      "type": "object",
      "properties": {
        "rel": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MessageResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "Meter": {
      "type": "object",
      "properties": {}
    },
    "MeterResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Meter"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "Owner": {
      "type": "object",
      "required": [
        "owner_id",
        "first_name",
        "last_name",
        "email",
        "username",
        "password",
        "notification"
      ],
      "properties": {
        "pbn_token": {
          "type": "string"
        },
        "notification": {
          "type": "string"
        },
        "lots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Lot"
          }
        },
        "owner_id": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string"
        },
        "type_id": {
          "type": "integer",
          "format": "int64"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        },
        "home_phone": {
          "type": "string"
        },
        "mobile_phone": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state_id": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "create_date": {
          "type": "string",
          "format": "date-time"
        },
        "update_date": {
          "type": "string",
          "format": "date-time"
        },
        "password_updated": {
          "type": "string",
          "format": "date-time"
        },
        "owner_attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerAttribute"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "pbn_token": "B6A..........",
          "notification": "Push",
          "lots": [],
          "owner_id": 12,
          "status": "Active",
          "type_id": 5,
          "first_name": "Jane",
          "last_name": "Doe",
          "email": "jdoe......",
          "username": "jdoe",
          "password": "CY9rzUYh03PK3k......",
          "home_phone": "",
          "mobile_phone": "",
          "address": "123 My Street",
          "city": "My City",
          "state_id": "UT",
          "zip": "93003",
          "create_date": "Mar 23, 2016 8:13:06 PM",
          "update_date": "Apr 18, 2017 10:30:04 AM",
          "password_updated": "Sep 19, 2016 9:07:07 PM",
          "owner_attributes": [
            {
              "owner_attr_id": 8,
              "owner_id": 12,
              "name": "age",
              "value": "29"
            }
          ]
        }
      }
    },
    "OwnerResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Owner"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "OwnerAttribute": {
      "type": "object",
      "required": [
        "owner_attr_id",
        "owner_id",
        "name"
      ],
      "properties": {
        "owner_attr_id": {
          "type": "integer",
          "format": "int64"
        },
        "owner_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "owner_attr_id": 8,
          "owner_id": 12,
          "name": "age",
          "value": "29"
        }
      }
    },
    "OwnerAttributeResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerAttribute"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "OwnerDetailsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "owner": {
              "$ref": "#/definitions/Owner"
            },
            "permits": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Permit"
              }
            },
            "meters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Meter"
              }
            },
            "vehicles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vehicle"
              }
            }
          }
        }
      }
    },
    "Pagination": {
      "type": "object",
      "required": [
        "returned"
      ],
      "properties": {
        "start": {
          "type": "string",
          "description": "The id of the first record returned."
        },
        "finish": {
          "type": "string",
          "description": "The id of the last record returned."
        },
        "quantity": {
          "type": "integer",
          "description": "The number of records requested."
        },
        "returned": {
          "type": "integer",
          "description": "The number of records actually returned."
        }
      },
      "example": {
        "application/json": {
          "start": "53e0bbab-....",
          "finish": "90bbab3e-....",
          "quantity": 25,
          "returned": 20
        }
      }
    },
    "Permit": {
      "type": "object",
      "required": [
        "mpermit_id",
        "owner_id",
        "mpermit_type_id",
        "valid_start_date",
        "valid_end_date",
        "space",
        "permit_type",
        "vehicles",
        "permit_attributes"
      ],
      "properties": {
        "mpermit_id": {
          "type": "integer",
          "format": "int64"
        },
        "owner_id": {
          "type": "integer",
          "format": "int64"
        },
        "permit_number": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "mpermit_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "valid_start_date": {
          "type": "string",
          "format": "date-time"
        },
        "valid_end_date": {
          "type": "string",
          "format": "date-time"
        },
        "create_date": {
          "type": "string",
          "format": "date-time"
        },
        "update_date": {
          "type": "string",
          "format": "date-time"
        },
        "space": {
          "type": "integer",
          "format": "int64"
        },
        "privileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Privilege"
          }
        },
        "permit_type": {
          "$ref": "#/definitions/PermitType"
        },
        "vehicles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vehicle"
          }
        },
        "permit_attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermitAttribute"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "mpermit_id": 255,
          "owner_id": 12,
          "permit_number": "PRV00001058",
          "status": "Pending",
          "mpermit_type_id": 24,
          "valid_start_date": "Apr 10, 2017 12:00:00 PM",
          "valid_end_date": "Apr 11, 2017 11:59:59 PM",
          "create_date": "Apr 10, 2017 3:21:12 PM",
          "update_date": "Apr 10, 2017 3:21:12 PM",
          "space": 0,
          "permit_type": {
            "mpermit_type_id": 24,
            "name": "Visitor",
            "description": "10 day visitor permit",
            "max_vehicles": 2,
            "max_concurrent": 0,
            "max_issued": 0,
            "period_type": "relative",
            "renewable": 0,
            "period_days": 1,
            "space_start": 0,
            "space_end": 0,
            "max_minutes": 0,
            "cost": 0,
            "requires_shipping": 0,
            "can_pickup": 0,
            "can_print": 1,
            "permit_type_attributes": [
              {
                "mpermit_type_attr_id": 1,
                "mpermit_type_id": 24,
                "name": "Semester",
                "value": "Fall"
              }
            ],
            "privileges": [
              {
                "type": "privilege",
                "codeid": "26AG",
                "description": "26AG",
                "citation_type_id": 0,
                "is_overtime": 0,
                "is_other": 0,
                "uuid": "53e0bbab-...."
              }
            ],
            "expire_notice_days": 0
          },
          "privileges": [
            {
              "type": "privilege",
              "codeid": "26AG",
              "description": "26AG",
              "citation_type_id": 0,
              "is_overtime": 0,
              "is_other": 0,
              "uuid": "53e0bbab-...."
            }
          ],
          "vehicles": [
            {
              "vehicle_id": 66,
              "owner_id": 12,
              "license": "test123",
              "vin": "",
              "make_id": "ACUR",
              "color_id": "AME",
              "state_id": "AK",
              "create_date": "Apr 14, 2017 9:09:39 AM",
              "update_date": "Apr 14, 2017 9:09:39 AM",
              "alias": "GoGoGo",
              "type": "Car",
              "vehicle_attributes": [
                {
                  "vehicle_attr_id": 4,
                  "vehicle_id": 66,
                  "name": "size",
                  "value": "Huuuge"
                }
              ]
            }
          ],
          "permit_attributes": [
            {
              "mpermit_attr_id": 1,
              "mpermit_id": 24,
              "name": "something",
              "value": "else"
            }
          ]
        }
      }
    },
    "PermitResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permit"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "PermitAttribute": {
      "type": "object",
      "required": [
        "mpermit_attr_id",
        "mpermit_id",
        "name",
        "value"
      ],
      "properties": {
        "mpermit_attr_id": {
          "type": "integer",
          "format": "int64"
        },
        "mpermit_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "mpermit_attr_id": 1,
          "mpermit_id": 24,
          "name": "something",
          "value": "else"
        }
      }
    },
    "PermitAttributeResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermitAttribute"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "PermitType": {
      "type": "object",
      "required": [
        "mpermit_type_id",
        "name",
        "description"
      ],
      "properties": {
        "mpermit_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "max_vehicles": {
          "type": "integer",
          "format": "int64"
        },
        "max_concurrent": {
          "type": "integer",
          "format": "int64"
        },
        "max_issued": {
          "type": "integer",
          "format": "int64"
        },
        "period_type": {
          "type": "string"
        },
        "renewable": {
          "type": "integer",
          "format": "int64"
        },
        "period_days": {
          "type": "integer",
          "format": "int64"
        },
        "space_start": {
          "type": "integer",
          "format": "int64"
        },
        "space_end": {
          "type": "integer",
          "format": "int64"
        },
        "max_minutes": {
          "type": "integer",
          "format": "int64"
        },
        "cost": {
          "type": "integer",
          "format": "int64"
        },
        "requires_shipping": {
          "type": "integer",
          "format": "int64"
        },
        "can_pickup": {
          "type": "integer",
          "format": "int64"
        },
        "can_print": {
          "type": "integer",
          "format": "int64"
        },
        "permit_type_attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermitTypeAttribute"
          }
        },
        "privileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Privilege"
          }
        },
        "expire_notice_days": {
          "type": "integer",
          "format": "int64"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "mpermit_type_id": 24,
          "name": "Visitor",
          "description": "10 day visitor permit",
          "max_vehicles": 2,
          "max_concurrent": 0,
          "max_issued": 0,
          "period_type": "relative",
          "renewable": 0,
          "period_days": 1,
          "space_start": 0,
          "space_end": 0,
          "max_minutes": 0,
          "cost": 0,
          "requires_shipping": 0,
          "can_pickup": 0,
          "can_print": 1,
          "permit_type_attributes": [
            {
              "mpermit_type_attr_id": 1,
              "mpermit_type_id": 24,
              "name": "Semester",
              "value": "Fall"
            }
          ],
          "privileges": [
            {
              "type": "privilege",
              "codeid": "26AG",
              "description": "26AG",
              "citation_type_id": 0,
              "is_overtime": 0,
              "is_other": 0,
              "uuid": "53e0bbab-...."
            }
          ],
          "expire_notice_days": 0
        }
      }
    },
    "PermitTypeResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermitType"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "PermitTypeAttribute": {
      "type": "object",
      "required": [
        "mpermit_type_attr_id",
        "mpermit_type_id",
        "name",
        "value"
      ],
      "properties": {
        "mpermit_type_attr_id": {
          "type": "integer",
          "format": "int64"
        },
        "mpermit_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "mpermit_type_attr_id": 1,
          "mpermit_type_id": 42,
          "name": "Semester",
          "value": "Fall"
        }
      }
    },
    "PermitTypeAttributeResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermitTypeAttribute"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "Privilege": {
      "type": "object",
      "required": [
        "type",
        "codeid",
        "description",
        "citation_type_id",
        "uuid"
      ],
      "properties": {
        "type": {
          "type": "string"
        },
        "codeid": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "citation_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "is_overtime": {
          "type": "integer",
          "format": "int64"
        },
        "is_other": {
          "type": "integer",
          "format": "int64"
        },
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "type": "privilege",
          "codeid": "26AG",
          "description": "26AG",
          "citation_type_id": 0,
          "is_overtime": 0,
          "is_other": 0,
          "uuid": "53e0bbab-...."
        }
      }
    },
    "PrivilegeResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Privilege"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "Purchase": {
      "type": "object",
      "properties": {}
    },
    "PurchaseResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Purchase"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "State": {
      "type": "object",
      "required": [
        "type",
        "codeid",
        "description",
        "citation_type_id",
        "is_overtime",
        "is_other"
      ],
      "properties": {
        "type": {
          "type": "string"
        },
        "codeid": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "citation_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "is_overtime": {
          "type": "integer",
          "format": "int64"
        },
        "is_other": {
          "type": "integer",
          "format": "int64"
        },
        "uuid": {
          "type": "string",
          "format": "uuid"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "type": "state",
          "codeid": "WY",
          "description": "Wyoming",
          "citation_type_id": 0,
          "is_overtime": 0,
          "is_other": 0,
          "uuid": "7be845f5-cfdc-480b-8761-6f2dbd9c1d67"
        }
      }
    },
    "StateResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/State"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "Time": {
      "type": "object",
      "required": [
        "mpermit_metered_time_id",
        "name",
        "minutes",
        "price"
      ],
      "properties": {
        "mpermit_metered_time_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "minutes": {
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "mpermit_metered_time_id": 3,
          "name": "Backlot 10 minutes",
          "minutes": 10,
          "price": 4.00
        }
      }
    },
    "TimeResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Time"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "Vehicle": {
      "type": "object",
      "required": [
        "vehicle_id",
        "owner_id",
        "license",
        "alias"
      ],
      "properties": {
        "vehicle_id": {
          "type": "integer",
          "format": "int64"
        },
        "owner_id": {
          "type": "integer",
          "format": "int64"
        },
        "license": {
          "type": "string"
        },
        "vin": {
          "type": "string"
        },
        "create_date": {
          "type": "string",
          "format": "date-time"
        },
        "update_date": {
          "type": "string",
          "format": "date-time"
        },
        "alias": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "vehicle_attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleAttribute"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "vehicle_id": 66,
          "owner_id": 12,
          "license": "test123",
          "vin": "",
          "make_id": "ACUR",
          "color_id": "AME",
          "state_id": "AK",
          "create_date": "Apr 14, 2017 9:09:39 AM",
          "update_date": "Apr 14, 2017 9:09:39 AM",
          "alias": "GoGoGo",
          "type": "Car",
          "vehicle_attributes": [
            {
              "vehicle_attr_id": 4,
              "vehicle_id": 66,
              "name": "size",
              "value": "Huuuge"
            }
          ],
          "links": [
            {
              "rel": "self",
              "uri": "/vehicles/66"
            },
            {
              "rel": "vehicle.attributes",
              "uri": "/vehicles/66/vehicle_attributes"
            }
          ]
        }
      }
    },
    "VehicleResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vehicle"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "VehicleAttribute": {
      "type": "object",
      "required": [
        "vehicle_attr_id",
        "vehicle_id",
        "name",
        "value"
      ],
      "properties": {
        "vehicle_attr_id": {
          "type": "integer",
          "format": "int64"
        },
        "vehicle_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "vehicle_attr_id": 4,
          "vehicle_id": 66,
          "name": "size",
          "value": "Huuuge"
        }
      }
    },
    "VehicleAttributeResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleAttribute"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "VehicleType": {
      "type": "object",
      "required": [
        "vehicle_type_id",
        "name"
      ],
      "properties": {
        "vehicle_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "order_value": {
          "type": "integer",
          "format": "int64"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "example": {
        "application/json": {
          "vehicle_type_id": 1,
          "name": "Car",
          "order_value": 1,
          "links": [
            {
              "rel": "self",
              "uri": "/vehicle_type_id/1"
            }
          ]
        }
      }
    },
    "VehicleTypeResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VehicleType"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination"
        }
      }
    },
    "BadRequest": {
      "type": "object",
      "description": "Bad Request",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Unauthorized": {
      "type": "object",
      "description": "Unauthorized",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Forbidden": {
      "type": "object",
      "description": "Forbidden",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "NotFound": {
      "type": "object",
      "description": "Not Found",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "NotAcceptable": {
      "type": "object",
      "description": "Not Acceptable",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "RequestTimeout": {
      "type": "object",
      "description": "Request Timeout",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "LengthRequired": {
      "type": "object",
      "description": "Length Required",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "PayloadTooLarge": {
      "type": "object",
      "description": "Payload Too Large",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "URITooLong": {
      "type": "object",
      "description": "URI Too Long",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "UnsupportedMediaType": {
      "type": "object",
      "description": "Unsupported Media Type",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "ExpectationFailed": {
      "type": "object",
      "description": "Expectation Failed",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "UpgradeRequired": {
      "type": "object",
      "description": "Upgrade Required",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "PreconditionRequired": {
      "type": "object",
      "description": "Precondition Required",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "RequestHeaderFieldsTooLarge": {
      "type": "object",
      "description": "Request Header Fields Too Large",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "UnavailableForLegalReasons": {
      "type": "object",
      "description": "Unavailable for Legal Reasons",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "InternalServerError": {
      "type": "object",
      "description": "Internal Server Error",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "NotImplemented": {
      "type": "object",
      "description": "Not Implemented",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "ServiceUnavailable": {
      "type": "object",
      "description": "Service Unavailable",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Vehicles": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Vehicle"
      }
    },
    "PermitPurchaseBody": {
      "type": "object",
      "required": [
        "mpermit_vehicle_list",
        "cc_storage_id",
        "space",
        "metered-time-id"
      ],
      "properties": {
        "mpermit_vehicle_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vehicle"
          }
        },
        "cc_storage_id": {
          "type": "integer"
        },
        "space": {
          "description": "The space the Permit will use",
          "type": "integer"
        },
        "metered-time-id": {
          "description": "The ID of the Time object",
          "type": "integer"
        }
      }
    },
    "PermitPurchaseTimeBody": {
      "type": "object",
      "required": [
        "cc_storage_id",
        "metered-time-id"
      ],
      "properties": {
        "cc_storage_id": {
          "type": "integer"
        },
        "space": {
          "description": "The space the Permit will use",
          "type": "integer"
        },
        "metered-time-id": {
          "description": "The ID of the Time object",
          "type": "integer"
        }
      }
    },
    "LoginBody": {
      "type": "object",
      "required": [
        "j_username",
        "j_password"
      ],
      "properties": {
        "j_username": {
          "description": "The user name for login",
          "type": "string"
        },
        "j_password": {
          "description": "The password for login in clear text",
          "type": "string",
          "format": "password"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about PayLock",
    "url": "http://paylock.com"
  },
  "x-amazon-apigateway-documentation": {}
}
